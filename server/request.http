### REST API Examples ###

### Get all orders
GET http://localhost:3001/api/orders
Accept: application/json

### Get a specific order
GET http://localhost:3001/api/orders/1
Accept: application/json

### Create a new order
POST http://localhost:3001/api/orders
Content-Type: application/json

{
  "customerName": "Alice Johnson",
  "orderDate": "2024-03-20T10:00:00Z",
  "status": "pending",
  "total": 299.99,
  "items": [
    {
      "productId": "101",
      "quantity": 2,
      "price": 149.99
    }
  ]
}

### Update an order
PATCH http://localhost:3001/api/orders/1
Content-Type: application/json

{
  "status": "completed"
}

### Delete an order
DELETE http://localhost:3001/api/orders/1

### Get all products
GET http://localhost:3001/api/products
Accept: application/json

### Get a specific product
GET http://localhost:3001/api/products/101
Accept: application/json

### GraphQL Examples ###

### Get all orders with their items and products
POST http://localhost:3001/graphql
Content-Type: application/json

{
  "query": "query { orders { id customerName orderDate status total items { id quantity price product { name price } } } }"
}

### Get a specific order
POST http://localhost:3001/graphql
Content-Type: application/json

{
  "query": "query { order(id: \"1\") { id customerName orderDate status total items { id quantity price product { name price } } } }"
}

### Create a new order
POST http://localhost:3001/graphql
Content-Type: application/json

{
  "query": "mutation { createOrder(input: { customerName: \"Bob Smith\", items: [{ productId: \"101\", quantity: 1 }] }) { id customerName status total } }"
}

### Update an order
POST http://localhost:3001/graphql
Content-Type: application/json

{
  "query": "mutation { updateOrder(id: \"1\", input: { status: \"completed\" }) { id status } }"
}

### Delete an order
POST http://localhost:3001/graphql
Content-Type: application/json

{
  "query": "mutation { deleteOrder(id: \"1\") }"
}

### Get all products
POST http://localhost:3001/graphql
Content-Type: application/json

{
  "query": "query { products { id name price description } }"
}

### Get a specific product
POST http://localhost:3001/graphql
Content-Type: application/json

{
  "query": "query { product(id: \"101\") { id name price description } }"
}

### Get sorted orders by field and direction
POST http://localhost:3001/graphql
Content-Type: application/json

{
  "query": "query ($sortField: String, $sortDirection: String) { orders(sortField: $sortField, sortDirection: $sortDirection) { id customerName orderDate status total items { id quantity price product { name price } } } }",
  "variables": {
    "sortField": "customerName",
    "sortDirection": "desc"
  }
} 